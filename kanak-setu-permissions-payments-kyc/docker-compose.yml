services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: ./services/api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  donor-web:
    build: ./apps/donor-web
    depends_on:
      - api

  institution-web:
    build: ./apps/institution-web
    depends_on:
      - api

  admin-web:
    build: ./apps/admin-web
    depends_on:
      - api

  reverse-proxy:
    build: ./reverse-proxy
    ports:
      - "80:80"
    depends_on:
      - donor-web
      - institution-web
      - admin-web
      - api

volumes:
  pgdata:
